<!--
  ~  IronJacamar, a Java EE Connector Architecture implementation
  ~  Copyright 2016, Red Hat Inc, and individual contributors
  ~  as indicated by the @author tags. See the copyright.txt file in the
  ~  distribution for a full listing of individual contributors.
  ~  
  ~  This is free software; you can redistribute it and/or modify it
  ~  under the terms of the Eclipse Public License 1.0 as
  ~  published by the Free Software Foundation.
  ~  
  ~  This software is distributed in the hope that it will be useful,
  ~  but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the Eclipse
  ~  Public License for more details.
  ~  
  ~  You should have received a copy of the Eclipse Public License 
  ~  along with this software; if not, write to the Free
  ~  Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
  ~  02110-1301 USA, or see the FSF site: http://www.fsf.org.
  -->

<deployment>

  <!-- DistributedWorkManagerThreadGroupJGroups -->
  <bean name="DistributedWorkManagerThreadGroupJGroups"
        class="java.lang.ThreadGroup">
    <constructor>
      <parameter>dwm</parameter>
    </constructor>
    <ignoreStop/>
    <ignoreDestroy/>
  </bean>

  <!-- DistributedWorkManagerThreadFactoryJGroups -->
  <bean name="DistributedWorkManagerThreadFactoryJGroups"
        interface="java.util.concurrent.ThreadFactory"
        class="org.jboss.threads.JBossThreadFactory">
    <constructor>
      <parameter><inject bean="DistributedWorkManagerThreadGroupJGroups"/></parameter>
      <parameter>false</parameter>
      <parameter>5</parameter>
      <parameter>work</parameter>
      <parameter><null/></parameter>
      <parameter><null/></parameter>
    </constructor>
  </bean>

  <!-- DistributedWorkManagerShortRunningThreadPoolJGroups -->
  <bean name="DistributedWorkManagerShortRunningThreadPoolJGroups"
        class="org.jboss.threads.QueueExecutor">
    <constructor>
      <!-- Core threads -->
      <parameter>20</parameter>
      <!-- Max threads -->
      <parameter>100</parameter>
      <!-- 60 seconds keepalive -->
      <parameter>60</parameter>
      <parameter><inject bean="KeepAliveTimeUnit"/></parameter>
      <!-- Queue size -->
      <parameter>1024</parameter>
      <!-- Thread factory -->
      <parameter><inject bean="DistributedWorkManagerThreadFactoryJGroups"/></parameter>
      <!-- Blocking -->
      <parameter>true</parameter>
      <!-- Handoff executor -->
      <parameter><inject bean="RejectingExecutor"/></parameter>
    </constructor>
    <destroy method="shutdown"/>
  </bean>

  <!-- DistributedWorkManagerPolicyJGroups -->
  <bean name="DistributedWorkManagerPolicyJGroups"
        class="org.ironjacamar.core.workmanager.policy.Always">
  </bean>

  <!-- DistributedWorkManagerSelectorJGroups -->
  <bean name="DistributedWorkManagerSelectorJGroups"
        class="org.ironjacamar.core.workmanager.selector.FirstAvailable">
  </bean>

  <!-- JGroupsConfiguration -->
  <bean name="JGroupsConfiguration"
        class="org.ironjacamar.core.workmanager.transport.remote.jgroups.JGroupsConfiguration">
  </bean>

  <!-- DistributedWorkManagerTransportJGroups -->
  <bean name="DistributedWorkManagerTransportJGroups"
        class="org.ironjacamar.core.workmanager.transport.remote.jgroups.JGroupsTransport">
    <!-- The id -->
    <property name="Id">0</property>

    <!-- The channel -->
    <property name="Channel">
      <inject bean="JGroupsConfiguration" property="Channel"/>
    </property>

    <property name="WorkManagerCoordinator" >
      <inject bean="WorkManagerCoordinator" />
    </property>



    <stop method="shutdown"/>
  </bean>

  <!-- PicketBox -->
  <bean name="PicketBoxJGroups"
        class="org.ironjacamar.core.security.picketbox.PicketBoxSecurityIntegration">
  </bean>

  <!-- DistributedWorkManagerJGroups -->
  <bean name="DistributedWorkManagerJGroups"
        interface="org.ironjacamar.core.api.workmanager.DistributedWorkManager"
        class="org.ironjacamar.core.workmanager.DistributedWorkManagerImpl">

    <!-- The name -->
    <property name="Name">DWM-JGroups</property>

    <!-- The short running thread pool -->
    <property name="ShortRunningThreadPool">
       <inject bean="DistributedWorkManagerShortRunningThreadPoolJGroups"/>
    </property>

    <!-- The XA terminator -->
    <property name="XATerminator">
       <inject bean="TransactionIntegration" property="XATerminator"/>
    </property>

    <!-- The callback security module -->
    <property name="CallbackSecurity">
       <inject bean="Callback"/>
    </property>

    <!-- The security integration module -->
    <property name="SecurityIntegration">
       <inject bean="PicketBoxJGroups"/>
    </property>

    <!-- The policy -->
    <property name="Policy">
       <inject bean="DistributedWorkManagerPolicyJGroups"/>
    </property>

    <!-- The selector -->
    <property name="Selector">
       <inject bean="DistributedWorkManagerSelectorJGroups"/>
    </property>

    <!-- The transport -->
    <property name="Transport">
       <inject bean="DistributedWorkManagerTransportJGroups"/>
    </property>

    <destroy method="shutdown"/>
  </bean>

  <!-- DistributedBootstrapContextJGroups -->
  <bean name="DistributedBootstrapContextJGroups"
        interface="org.ironjacamar.core.api.bootstrapcontext.BootstrapContext"
        class="org.ironjacamar.core.bootstrapcontext.BootstrapContextImpl">
    <constructor>
    <parameter>
      <inject bean="DistributedWorkManagerJGroups"/>
    </parameter>
    <parameter>
      <inject bean="TransactionSynchronizationRegistry"/>
    </parameter>
    <parameter>
      <inject bean="XATerminator"/>
    </parameter>
    <parameter name="ValidatorFactory">
      <inject bean="BeanValidation" property="ValidatorFactory" />
    </parameter>
  </constructor>
  <property name="Name">DWMBC-JGroups</property>
  <property name="WorkManagerName">
    <inject bean="DistributedWorkManagerJGroups" property="Name"/>
  </property>
  </bean>

</deployment>
